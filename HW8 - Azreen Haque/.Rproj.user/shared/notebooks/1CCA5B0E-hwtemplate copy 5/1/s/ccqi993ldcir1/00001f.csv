"0","### Part F: Influence Diagnostics for Model from Part B (X2, X3, X4, X5)"
"0","library(dplyr)"
"0",""
"0","# Fit the final model from Part B"
"0","model_f <- lm(Y ~ X2 + X3 + X4 + X5, data = data)"
"0",""
"0","# Extract diagnostics"
"0","student_resid <- rstudent(model_f)"
"0","hat_vals <- hatvalues(model_f)"
"0","dffits_vals <- dffits(model_f)"
"0","cooks_vals <- cooks.distance(model_f)"
"0","dfbetas_vals <- dfbetas(model_f)"
"0",""
"0","# Sample size (n) and number of parameters (p)"
"0","n <- nrow(data)"
"0","p <- length(coef(model_f))  # includes intercept"
"0",""
"0","# Calculate cutoffs"
"0","cutoff_vals <- list("
"0","  Studentized_Deleted_Residuals = 3,"
"0","  Hat_Values = 2 * p / n,"
"0","  DFFITS = 2 * sqrt(p) / sqrt(n),"
"0","  Cooks_D = 4 / n,"
"0","  DFBETA = 2 / sqrt(n)"
"0",")"
"0",""
"0","# Create summary table with flags"
"0","diagnostics <- data.frame("
"0","  Obs = 1:n,"
"0","  Studentized_Deleted_Residuals = round(student_resid, 3),"
"0","  Hat_Values = round(hat_vals, 3),"
"0","  DFFITS = round(dffits_vals, 3),"
"0","  Cooks_D = round(cooks_vals, 3),"
"0","  DFBETA_Intercept = round(dfbetas_vals[, 1], 3),"
"0","  Outlier_Studentized = abs(student_resid) > cutoff_vals$Studentized_Deleted_Residuals,"
"0","  High_Leverage = hat_vals > cutoff_vals$Hat_Values,"
"0","  Influential_DFFITS = abs(dffits_vals) > cutoff_vals$DFFITS,"
"0","  Influential_CooksD = cooks_vals > cutoff_vals$Cooks_D,"
"0","  Influential_DFBETA = abs(dfbetas_vals[, 1]) > cutoff_vals$DFBETA"
"0",")"
"0",""
"0","# Print critical thresholds"
"0","cat(""=== Critical Cutoff Values ===\n"")"
"1","=== Critical Cutoff Values ===
"
"0","print(cutoff_vals)"
"1","$Studentized_Deleted_Residuals
"
"1","[1]"
"1"," 3"
"1","
"
"1","
"
"1","$Hat_Values
"
"1","[1]"
"1"," 0.1923077"
"1","
"
"1","
"
"1","$DFFITS
"
"1","[1]"
"1"," 0.6201737"
"1","
"
"1","
"
"1","$Cooks_D
"
"1","[1]"
"1"," 0.07692308"
"1","
"
"1","
"
"1","$DFBETA
"
"1","[1]"
"1"," 0.2773501"
"1","
"
"1","
"
"0","# Show the first 10 rows of diagnostic table"
"0","cat(""\n=== First 10 Observations ===\n"")"
"1","
=== First 10 Observations ===
"
"0","print(head(diagnostics, 10))"

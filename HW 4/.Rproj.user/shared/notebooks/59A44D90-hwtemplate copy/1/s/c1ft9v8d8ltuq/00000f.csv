"0","# Function to check if two matrices can be multiplied"
"0","can_multiply <- function(mat1, mat2, name1, name2) {"
"0","  if (ncol(mat1) == nrow(mat2)) {"
"0","    result <- mat1 %*% mat2"
"0","    cat(""Matrix"", name1, ""*"", name2, ""is valid.\n"")"
"0","    print(result)"
"0","    cat(""Dimensions of"", name1, ""*"", name2, "":"", dim(result), ""\n\n"")"
"0","  } else {"
"0","    cat(""Matrix"", name1, ""*"", name2, ""is NOT valid due to incompatible dimensions.\n\n"")"
"0","  }"
"0","}"
"0",""
"0","# Check all possible matrix multiplications"
"0","can_multiply(A, B, ""A"", ""B"")  # A (2x3) * B (3x3) = Valid (2x3)"
"1","Matrix"
"1"," "
"1","A"
"1"," "
"1","*"
"1"," "
"1","B"
"1"," "
"1","is valid.
"
"1","    "
"1"," [,1]"
"1"," [,2]"
"1"," [,3]"
"1","
[1,]"
"1","   -6"
"1","   -1"
"1","    2"
"1","
[2,]"
"1","   12"
"1","   -6"
"1","   29"
"1","
"
"1","Dimensions of"
"1"," "
"1","A"
"1"," "
"1","*"
"1"," "
"1","B"
"1"," "
"1",":"
"1"," "
"1","2"
"1"," "
"1","3"
"1"," "
"1","

"
"0","can_multiply(B, A, ""B"", ""A"")  # B (3x3) * A (2x3) = Invalid"
"1","Matrix"
"1"," "
"1","B"
"1"," "
"1","*"
"1"," "
"1","A"
"1"," "
"1","is NOT valid due to incompatible dimensions.

"
"0","can_multiply(A, C, ""A"", ""C"")  # A (2x3) * C (2x2) = Invalid"
"1","Matrix"
"1"," "
"1","A"
"1"," "
"1","*"
"1"," "
"1","C"
"1"," "
"1","is NOT valid due to incompatible dimensions.

"
"0","can_multiply(C, A, ""C"", ""A"")  # C (2x2) * A (2x3) = Valid (2x3)"
"1","Matrix"
"1"," "
"1","C"
"1"," "
"1","*"
"1"," "
"1","A"
"1"," "
"1","is valid.
"
"1","    "
"1"," [,1]"
"1"," [,2]"
"1"," [,3]"
"1","
[1,]"
"1","   -6"
"1","  -10"
"1","    2"
"1","
[2,]"
"1","    7"
"1","   -3"
"1","   -1"
"1","
"
"1","Dimensions of"
"1"," "
"1","C"
"1"," "
"1","*"
"1"," "
"1","A"
"1"," "
"1",":"
"1"," "
"1","2"
"1"," "
"1","3"
"1"," "
"1","

"
"0","can_multiply(B, D, ""B"", ""D"")  # B (3x3) * D (3x1) = Valid (3x1)"
"1","Matrix"
"1"," "
"1","B"
"1"," "
"1","*"
"1"," "
"1","D"
"1"," "
"1","is valid.
"
"1","    "
"1"," [,1]"
"1","
[1,]"
"1","  -12"
"1","
[2,]"
"1","   11"
"1","
[3,]"
"1","  -17"
"1","
"
"1","Dimensions of"
"1"," "
"1","B"
"1"," "
"1","*"
"1"," "
"1","D"
"1"," "
"1",":"
"1"," "
"1","3"
"1"," "
"1","1"
"1"," "
"1","

"
"0","can_multiply(D, B, ""D"", ""B"")  # D (3x1) * B (3x3) = Invalid"
"1","Matrix"
"1"," "
"1","D"
"1"," "
"1","*"
"1"," "
"1","B"
"1"," "
"1","is NOT valid due to incompatible dimensions.

"
"0","can_multiply(C, D, ""C"", ""D"")  # C (2x2) * D (3x1) = Invalid"
"1","Matrix"
"1"," "
"1","C"
"1"," "
"1","*"
"1"," "
"1","D"
"1"," "
"1","is NOT valid due to incompatible dimensions.

"
"0","can_multiply(D, C, ""D"", ""C"")  # D (3x1) * C (2x2) = Invalid"
"1","Matrix"
"1"," "
"1","D"
"1"," "
"1","*"
"1"," "
"1","C"
"1"," "
"1","is NOT valid due to incompatible dimensions.

"

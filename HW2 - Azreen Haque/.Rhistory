# Given values
n <- 122  # Sample size
x_bar <- 24.71  # Mean of X values
S_xx <- 2452.959  # Sum of squared deviations from mean
# Construct X_i values explicitly to satisfy conditions
X_i <- seq(x_bar - 5, x_bar + 5, length.out = n)  # Centered values around x_bar
# Compute k_i exactly
k_i <- (X_i - x_bar) / sum((X_i - x_bar) * X_i)  # Ensures sum(k_i * X_i) = 1
# Compute l_i exactly
l_i <- (1 / n) - (k_i * x_bar)
# Step 1: Verify sum of k_i is 0
sum_k_i <- sum(k_i)
cat("Proof: Sum of k_i =", round(sum_k_i, 10), "(Expected: 0)\n")
# Step 2: Verify sum of k_i * X_i is 1
sum_k_i_X_i <- sum(k_i * X_i)
cat("Proof: Sum of k_i * X_i =", round(sum_k_i_X_i, 10), "(Expected: 1)\n")
# Step 3: Verify sum of l_i is 1
sum_l_i <- sum(l_i)
cat("Proof: Sum of l_i =", round(sum_l_i, 10), "(Expected: 1)\n")
# Step 4: Verify sum of l_i * X_i is 0
sum_l_i_X_i <- sum(l_i * X_i)
cat("Proof: Sum of l_i * X_i =", round(sum_l_i_X_i, 10), "(Expected: 0)\n")
\documentclass{article}
# Compute ANOVA values in R
SSR <- 3.74644
n <- 122
SSTO <- 45.8743  # Given total sum of squares
SSE <- SSTO - SSR  # Compute error sum of squares
df_reg <- 1
df_error <- n - 2
df_total <- n - 1
MSR <- SSR / df_reg
MSE <- SSE / df_error
# Load the correct dataset
dataset <- read.csv("hw02.csv")
# Rename columns for consistency
colnames(dataset) <- c("ACT", "GPA")
# Fit linear model
model <- lm(GPA ~ ACT, data = dataset)
# Display summary of the model
summary(model)
# Confidence interval for beta_1
confint(model)
# Confidence interval for mean GPA at Xh = 30
predict(model, newdata = data.frame(ACT = Xh), interval = "confidence", level = 0.95)

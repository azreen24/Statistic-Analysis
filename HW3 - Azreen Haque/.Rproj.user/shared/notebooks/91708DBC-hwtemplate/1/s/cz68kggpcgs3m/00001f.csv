"0",""
"0","# Find the optimal lambda (maximizing log-likelihood)"
"0","lambda_opt <- boxcox_result$x[which.max(boxcox_result$y)]"
"0","cat(""Optimal Lambda:"", lambda_opt, ""\n"")"
"1","Optimal Lambda:"
"1"," "
"1","-0.4242424"
"1"," "
"1","
"
"0","# Select the closest transformation from the notes"
"0","if (lambda_opt >= 1.9 & lambda_opt <= 2.1) {"
"0","    data$Deflection_Transformed <- data$Deflection^2  # Y^2"
"0","    cat(""Chosen Transformation: Y^2\n"")"
"0","} else if (lambda_opt >= 0.4 & lambda_opt <= 0.6) {"
"0","    data$Deflection_Transformed <- sqrt(data$Deflection)  # sqrt(Y)"
"0","    cat(""Chosen Transformation: sqrt(Y)\n"")"
"0","} else if (lambda_opt >= -0.1 & lambda_opt <= 0.1) {"
"0","    data$Deflection_Transformed <- log(data$Deflection + abs(min(data$Deflection)) + 0.01)  # log(Y)"
"0","    cat(""Chosen Transformation: log(Y)\n"")"
"0","} else if (lambda_opt >= -0.6 & lambda_opt <= -0.4) {"
"0","    data$Deflection_Transformed <- 1 / sqrt(data$Deflection)  # 1/sqrt(Y)"
"0","    cat(""Chosen Transformation: 1/sqrt(Y)\n"")"
"0","} else if (lambda_opt >= -1.1 & lambda_opt <= -0.9) {"
"0","    data$Deflection_Transformed <- 1 / data$Deflection  # 1/Y"
"0","    cat(""Chosen Transformation: 1/Y\n"")"
"0","} else {"
"0","    cat(""Chosen Transformation: No common transformation found\n"")"
"0","}"
"1","Chosen Transformation: 1/sqrt(Y)
"
"0","# Fit the new model with the transformed Y (if applicable)"
"0","if (exists(""data$Deflection_Transformed"")) {"
"0","    model_transformed <- lm(Deflection_Transformed ~ Area, data = data)"
"0","    summary(model_transformed)"
"0","}"
"0",""
